package catalogo.vistas;

import catalogo.controladores.JPA.OrdenDeCompraJpaController;
import catalogo.modelo.OrdenCompra;
import catalogo.modelo.ProductoOrdenCompra;
import catalogo.vistas.modelo.OrdenesPendientesListModel;
import catalogo.vistas.modelo.ProductoOrdenDeCompraTableModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Mauro Federico Lopez
 */
public class OrdenesDeCompraPendientesUI extends javax.swing.JPanel {

    private OrdenDeCompraJpaController ordenDeCompraJpaController;
    private OrdenesPendientesListModel ordenesPendientesListModel;
    private ProductoOrdenDeCompraTableModel productoOrdenDeCompraTableModel;
    private OrdenCompra ordenDeCompra = null;

    /**
     * Creates new form OrdenesDeCompraPendientesUI
     */
    public OrdenesDeCompraPendientesUI() {
        initComponents();
    }

    public OrdenesDeCompraPendientesUI(OrdenDeCompraJpaController ordenDeCompraJpaController) {
        this();
        this.ordenDeCompraJpaController = ordenDeCompraJpaController;
        ordenesPendientesListModel = new OrdenesPendientesListModel(ordenDeCompraJpaController);
        listaOrdenesPendientes.setModel(ordenesPendientesListModel);
        productoOrdenDeCompraTableModel = new ProductoOrdenDeCompraTableModel();
        tablaProductosDeOrdenDeCompra.setModel(productoOrdenDeCompraTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codigoEnvioUI = new javax.swing.JDialog();
        campoCodigoEnvio = new javax.swing.JFormattedTextField();
        etiquetaCodigoEnvio = new javax.swing.JLabel();
        botonGuardarCodigoEnvio = new javax.swing.JButton();
        panelOrdenesPendientes = new javax.swing.JPanel();
        botonFinalizarEnvio = new javax.swing.JButton();
        jspLista = new javax.swing.JScrollPane();
        listaOrdenesPendientes = new javax.swing.JList();
        panelProductosOrdenes = new javax.swing.JPanel();
        campoFecha = new javax.swing.JLabel();
        jspTablaProductos = new javax.swing.JScrollPane();
        tablaProductosDeOrdenDeCompra = new javax.swing.JTable();
        campoMontoTotal = new javax.swing.JLabel();

        codigoEnvioUI.setTitle("Finalizar envío");
        codigoEnvioUI.setLocationByPlatform(true);
        codigoEnvioUI.setResizable(false);

        campoCodigoEnvio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("############"))));

        etiquetaCodigoEnvio.setText("Ingrese el código de envío");

        botonGuardarCodigoEnvio.setText("Guardar");
        botonGuardarCodigoEnvio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarCodigoEnvioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout codigoEnvioUILayout = new javax.swing.GroupLayout(codigoEnvioUI.getContentPane());
        codigoEnvioUI.getContentPane().setLayout(codigoEnvioUILayout);
        codigoEnvioUILayout.setHorizontalGroup(
            codigoEnvioUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(codigoEnvioUILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaCodigoEnvio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(codigoEnvioUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonGuardarCodigoEnvio)
                    .addComponent(campoCodigoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        codigoEnvioUILayout.setVerticalGroup(
            codigoEnvioUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(codigoEnvioUILayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(codigoEnvioUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCodigoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaCodigoEnvio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonGuardarCodigoEnvio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Órdenes de compra pendientes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 20))); // NOI18N
        setMaximumSize(new java.awt.Dimension(700, 500));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));
        setLayout(new java.awt.BorderLayout());

        panelOrdenesPendientes.setLayout(new java.awt.BorderLayout());

        botonFinalizarEnvio.setText("Finalizar Envío");
        botonFinalizarEnvio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFinalizarEnvioActionPerformed(evt);
            }
        });
        panelOrdenesPendientes.add(botonFinalizarEnvio, java.awt.BorderLayout.PAGE_END);

        jspLista.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jspLista.setMaximumSize(new java.awt.Dimension(150, 32767));
        jspLista.setMinimumSize(new java.awt.Dimension(150, 23));
        jspLista.setPreferredSize(new java.awt.Dimension(150, 130));

        listaOrdenesPendientes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaOrdenesPendientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaOrdenesPendientesMouseClicked(evt);
            }
        });
        jspLista.setViewportView(listaOrdenesPendientes);

        panelOrdenesPendientes.add(jspLista, java.awt.BorderLayout.CENTER);

        add(panelOrdenesPendientes, java.awt.BorderLayout.LINE_START);

        panelProductosOrdenes.setLayout(new java.awt.BorderLayout());

        campoFecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoFecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        campoFecha.setText("Fecha de la órden de compra");
        panelProductosOrdenes.add(campoFecha, java.awt.BorderLayout.PAGE_START);

        jspTablaProductos.setMaximumSize(new java.awt.Dimension(32767, 350));
        jspTablaProductos.setMinimumSize(new java.awt.Dimension(23, 350));
        jspTablaProductos.setPreferredSize(new java.awt.Dimension(452, 350));

        tablaProductosDeOrdenDeCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Título 1", "Título 2", "Título 3", "Título 4", "Título 5"
            }
        ));
        jspTablaProductos.setViewportView(tablaProductosDeOrdenDeCompra);

        panelProductosOrdenes.add(jspTablaProductos, java.awt.BorderLayout.CENTER);

        campoMontoTotal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoMontoTotal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        campoMontoTotal.setText("Monto total de la órden de compra");
        panelProductosOrdenes.add(campoMontoTotal, java.awt.BorderLayout.PAGE_END);

        add(panelProductosOrdenes, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void botonFinalizarEnvioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFinalizarEnvioActionPerformed
        try {
            if(ordenDeCompra != null) {
                campoCodigoEnvio.setValue(null);
                codigoEnvioUI.setVisible(true);
                codigoEnvioUI.pack();
            } else {
                throw new Exception("No ha seleccionado ningún órden de compra pendiente");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonFinalizarEnvioActionPerformed

    private void listaOrdenesPendientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaOrdenesPendientesMouseClicked
        int indiceSeleccionado = listaOrdenesPendientes.getSelectedIndex();
        System.out.println(indiceSeleccionado);
        if(indiceSeleccionado >= 0) {
            ordenDeCompra = (OrdenCompra) ordenesPendientesListModel.getElementAt(indiceSeleccionado);
            ArrayList<ProductoOrdenCompra> productosDeOrdenCompra = ordenDeCompra.getProductosDeOrdenCompra();
            productoOrdenDeCompraTableModel.setProductosOrdenDeCompra(productosDeOrdenCompra);
        }
        listaOrdenesPendientes.clearSelection();
    }//GEN-LAST:event_listaOrdenesPendientesMouseClicked

    private void botonGuardarCodigoEnvioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarCodigoEnvioActionPerformed
        try {
            Long codigoEnvio = ((Number) campoCodigoEnvio.getValue()).longValue();
            ordenDeCompraJpaController.finalizarEnvio(ordenDeCompra, codigoEnvio);
            ordenDeCompra = null;
            codigoEnvioUI.setVisible(false);
            productoOrdenDeCompraTableModel.setProductosOrdenDeCompra(new ArrayList());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonGuardarCodigoEnvioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonFinalizarEnvio;
    private javax.swing.JButton botonGuardarCodigoEnvio;
    private javax.swing.JFormattedTextField campoCodigoEnvio;
    private javax.swing.JLabel campoFecha;
    private javax.swing.JLabel campoMontoTotal;
    private javax.swing.JDialog codigoEnvioUI;
    private javax.swing.JLabel etiquetaCodigoEnvio;
    private javax.swing.JScrollPane jspLista;
    private javax.swing.JScrollPane jspTablaProductos;
    private javax.swing.JList listaOrdenesPendientes;
    private javax.swing.JPanel panelOrdenesPendientes;
    private javax.swing.JPanel panelProductosOrdenes;
    private javax.swing.JTable tablaProductosDeOrdenDeCompra;
    // End of variables declaration//GEN-END:variables
}
